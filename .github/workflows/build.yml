name: build

defaults:
  run:
    shell: bash

on:
  push:
    tags: ['v*']

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false

      matrix:
        os: [ubuntu-latest, macOS-latest]
    env:
      BIN_NAME: turing-machines
    steps:
      - uses: actions/checkout@v2
      - uses: cachix/install-nix-action@v13
      - name: Build with nix
        run: nix-build
      - name: Patch macOS binary
        if: matrix.os == 'macOS-latest'
        run: |
          cp "result/bin/$BIN_NAME" "$BIN_NAME"
          LIBFFI_NIX=$(otool -l "$BIN_NAME" | grep libffi | awk '{print $2}')
          install_name_tool -change "$LIBFFI_NIX" '@loader_path/libffi.dylib' "$BIN_NAME"
      - name: Patch Linux binary
        if: matrix.os == 'ubuntu-latest'
        run: |
          cp "result/bin/$BIN_NAME" "$BIN_NAME"
          chmod u+w "$BIN_NAME"
          nix-shell patchelf.nix --run \
            "patchelf --set-interpreter /lib64/ld-linux-x86-64.so.2 '$BIN_NAME'"
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: turing-machines-${{ runner.OS }}
          path: ${{ env.BIN_NAME }}

  release:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      fail-fast: true
      matrix:
        os: [Linux, macOS]
    env:
      TARGET_NAME: turing-machines-${{ matrix.os }}
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: ${{ env.TARGET_NAME }}
      - run: mv turing-machines ${{ env.TARGET_NAME }}
      - uses: ncipollo/release-action@v1
        with:
          artifacts: ${{ env.TARGET_NAME }}
          token: ${{ secrets.GITHUB_TOKEN }}
          allowUpdates: true

